library('edgeR')
library('biomaRt')
library('RCurl')
library('gtools')
library('biomaRt')
library('RCurl')
library('gtools')
library('sleuth')
sleuth help()
help(sleuth)
sleuth
a = installed.packages()
a
package_df <- as.data.frame(installed.packages("/Library/Frameworks/R.framework/Versions/2.15/Resources/library"))
package_list <- as.character(package_df$Package)
\\\\a
a
installed_packages = a
write.csv()
help(write.csv)
write.csv(installed_packages,"installed_packages.csv")
getwd()
rversion
R.version
installed.packages()
library(sleuth)
read.csv("installed.packages.csv")
getwd()
ls
read.csv("installed_packages.csv")
packages = read.csv("installed_packages.csv")
install.packages(packages)
View(packages)
packages = as.data.frame(packages)
packge_list = as.character(packages)
package_list
package_list
packge_list
install.packages(packge_list)
packages$Package
package_list = as.character(packages$Package)
install.packages(package_list)
install.packages(package_list)
install.packages(package_list)
install.packages(package_list)
install.packages(package_list)
v_left = read.table('/Users/HoltLab/Dropbox/ADH2_Switch_snf_RNAseq_12.28.17/volcano_leftside', sep = "\t")
v_left = read.table('/Users/HoltLab/Dropbox/ADH2_Switch_snf_RNAseq_12.28.17/volcano_leftside.txt', sep = "\t")
v_right = read.table('/Users/HoltLab/Dropbox/ADH2_Switch_snf_RNAseq_12.28.17/volcano_rightside.txt', sep = "\t")
v_left
#Load libraries, read in metadata and factor metadata ----
library('tximport')
library('tximportData')
library('DESeq2')
setwd("~/Documents/R/Scripts/Kallisto_DESeq2_Scripts_RNASeq_12.18.17/")
# metadata = read.table("load_files/IgnaciometadataCombined_rep3Dex_dropped.txt", sep = "\t", header = TRUE)
# metadata = read.table("load_files/metadata_Null_dropped.txt", sep = "\t", header = TRUE)
metadata = read.table("load_files/metadata_3reps.txt", sep = "\t", header = TRUE)
metadata$path = as.character(metadata$path)
metadata$Condition = as.factor(metadata$Condition)
# import gene mappings (t2g) --------------------- this is a crucial section but corrently the 'mart' function fails half the time (do it by hand)
t2g = readRDS('t2g.rda')
#  mart <- biomaRt::useMart(biomart = "ENSEMBL_MART_ENSEMBL",
#                           dataset = "scerevisiae_gene_ensembl",
#                           host = 'ensembl.org')
#
#
# t2g <- biomaRt::getBM(attributes = c("ensembl_transcript_id", "ensembl_gene_id",
#                                      "external_gene_name", "description"), mart = mart)
# t2g <- dplyr::rename(t2g, target_id = ensembl_transcript_id,
#                      ens_gene = ensembl_gene_id, ext_gene = external_gene_name)
# extract file paths and append Kallisto abundance.tsv filenames -----
files = metadata[,2]
tx2gene = t2g[,1:2]
for(i in 1:length(files)){
files[i] = paste(files[i],sep ="","/abundance.tsv")
}
# Use 'tximport::tximport' function to load in 'counts' data and add gene mappings to create txi counts / mappings list for use in DEseq2 ------
txi <- tximport(files, type = "kallisto", tx2gene = tx2gene) #, countsFromAbundance = "lengthScaledTPM"
#Don't use scaled by length - DESEq2 takes care of this
#Create 'sampledata' variable with relevant metadata, then factor it ----
sampledata = metadata[,c("sample", "Condition","BiologicalReplicate","GrowthCondition","SequencingRun")]
for(i in 2:length(sampledata)){
sampledata[i] = factor(sampledata[,i])
}
# Create DESeq2 object ----
dds <- DESeqDataSetFromTximport(txi,
colData = sampledata,
design = ~SequencingRun + Condition)
# Filter based on Rows with at least 20 counts ----
keep <- rowSums(counts(dds)) >= 20
dds <- dds[keep,]
#dds$Condition <- relevel(dds$Condition, ref = "WT Dex")
#dds$Condition <- droplevels(dds$Condition) # only for when you are removing some of the data for the analysis
# Run DESeq to create full dds object with fitted models ----
dds = DESeq(dds)
res_table = counts(dds, normalized=T)
res_table
dds$sample
dds@metadata
dds
t2g
instersect(t2g$ext_gene, v_left)
intersect(t2g$ext_gene, v_left)
t2g$ext_gene
v_left
as.character(v_left)
as.character(v_left[,1])
test = as.character(v_left[,1])
intersect(t2g$ext_gene, test)
t2g$ext_gene[test]
t2g$ext_gene[test,]
t2g$ext_gene[,test]
t2g$ext_gene
t2g$ext_gene[,3]
t2g$ext_gene[3]
t2g$ext_gene[test]
test
t2g$ext_gene == test
test %in% t2g$ext_gene
t2g$ext_gene %in% test
as.character(v_left)
as.character(v_left,)
as.character(v_left[,2])
as.character(v_left[,1])
v_left = as.character(v_left[,1])
v_right = as.character(v_right[,1])
t2g_sub_left = t2g$ext_gene %in% v_left
t2g_sub_right = t2g$ens_gene %in% v_right
left_genes = t2g[t2g_sub_left,]
right_genes = t2g[t2g_sub_right,]
left_genes
View(left_genes)
write.table(left_genes, '/Users/HoltLab/Dropbox/ADH2_Switch_snf_RNAseq_12.28.17/volcano_annot_left.txt')
write.table(right_genes, '/Users/HoltLab/Dropbox/ADH2_Switch_snf_RNAseq_12.28.17/volcano_annot_right.txt')
t2g_sub_right = t2g$ens_gene %in% v_right
t2g_sub_left
t2g_sub_rigjt
t2g_sub_right
t2g_sub_right = t2g$ens_gene %in% v_right
right_genes = t2g[t2g_sub_right,]
right_genes
v_right = as.character(v_right[,1])
v_right = read.table('/Users/HoltLab/Dropbox/ADH2_Switch_snf_RNAseq_12.28.17/volcano_rightside.txt', sep = "\t")
v_right = as.character(v_right[,1])
v_right
t2g_sub_right = t2g$ens_gene %in% v_right
right_genes = t2g[t2g_sub_right,]
right_genes
v_right
t2g_sub_right = t2g$ext_gene %in% v_right
right_genes = t2g[t2g_sub_right,]
write.table(right_genes, '/Users/HoltLab/Dropbox/ADH2_Switch_snf_RNAseq_12.28.17/volcano_annot_right.txt', sep = "\t")
write.table(left_genes, '/Users/HoltLab/Dropbox/ADH2_Switch_snf_RNAseq_12.28.17/volcano_annot_left.txt', sep = "\t")
